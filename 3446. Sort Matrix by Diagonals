class Solution {
    public int[][] sortMatrix(int[][] grid) {
        int n = grid.length;
        for(int i = 0; i<n; i++){
            sort(0,i,grid,n);
        }
        for(int i = 0; i<n; i++){
            sort(i,0,grid,n);
        }
        return grid;
    }
    public void sort(int row, int col, int[][] grid, int n){
        int r = row; 
        int c = col;
        List<Integer> lt = new ArrayList<>();
        while(r < n && c< n){
            lt.add(grid[r][c]);
            r++;
            c++;
        }
        Collections.sort(lt);
        if(row >= col){
            Collections.reverse(lt);
        }
        r = row;
        c = col;
        int i = 0;
        while(r<n && c< n){
            grid[r][c] = lt.get(i++);
            r++;
            c++;
        }
    }
}
