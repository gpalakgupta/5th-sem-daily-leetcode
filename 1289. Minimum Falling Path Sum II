class Solution {
    public int minFallingPathSum(int[][] grid) {
        int n = grid.length;
        int m  = grid[0].length;
        int[][] dp = new int[n][m];
        for(int[] a : dp){
            Arrays.fill(a,1000000);
        }
        int ans = Integer.MAX_VALUE;
        for(int i = 0; i<n; i++){
            ans = Math.min(ans,helper(0,i,grid,dp));
        }
        return ans;
    }
    public int helper(int sr, int sc,int[][] grid, int[][] dp){
        if(sr == grid.length-1){
            return grid[sr][sc];
        }
        if(dp[sr][sc] != 1000000){
            return dp[sr][sc];
        }
        int ans = Integer.MAX_VALUE;
        for(int i = 0; i<grid[0].length; i++){
            if(i !=  sc){
                ans = Math.min(ans,helper(sr+1,i,grid,dp));
            }
        }
        return dp[sr][sc] = ans+grid[sr][sc];
    }
}
