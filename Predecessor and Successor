/* BST Node
class Node {
    int data;
    Node left, right;
    Node(int x) {
        data = x;
        left = right = null;
    }
} */

class Solution {
    public ArrayList<Node> findPreSuc(Node root, int key) {
        // code here
        ArrayList<Node> ans = new ArrayList<>();
        ans.add(pre(root,key));
        ans.add(succ(root,key));
        return ans;
    }
    public Node pre(Node root, int key){
        Node ans = null;
        while(root != null){
            if(root.data < key){
                ans = root;
                root = root.right;
            }
            else{
                root = root.left;
            }
        }
        return ans;
    }
    public Node succ(Node root, int key){
        Node ans = null;
        while(root != null){
            if(root.data > key){
                ans = root;
                root = root.left;
            }
            else{
                root = root.right;
            }
        }
        return ans;
    }
}
