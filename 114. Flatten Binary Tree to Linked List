/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //   TreeNode pre = null;
    public void flatten(TreeNode root) {
        // if(root == null){
        //     return;
        // }
        // flatten(root.right);
        // flatten(root.left);
        // root.right = pre;
        // root.left = null;
        // pre = root;
        makeLL(root);
         
    }
    public TreeNode makeLL(TreeNode root){
        if(root == null){
            return null;
        }
        if(root.left == null && root.right == null){
            return root;
        }
        TreeNode left = makeLL(root.left);
        TreeNode right = makeLL(root.right);
        if(root.left != null){
            left.right = root.right;
            root.right = root.left;
            root.left = null;
        }
        return right != null ? right : left;
    }
}
