class Solution {
    public int minPathSum(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int[][] dp = new int[n][m];
        for(int[] a : dp){
            Arrays.fill(a,-1);
        }
        return helper(0,0,grid,dp);
    }
    public int helper(int r, int c, int[][] grid, int[][] dp){
        if(r == grid.length-1 && c == grid[0].length-1){
            return grid[r][c];
        }
        if(r >= grid.length || c >= grid[0].length){
            return Integer.MAX_VALUE;
        }
      
        if(dp[r][c] != -1){
            return dp[r][c];
        }
        int a = helper(r+1,c,grid,dp);
        int b =  helper(r,c+1,grid,dp);
        return dp[r][c] = Math.min(a,b)+grid[r][c];
    }
}
