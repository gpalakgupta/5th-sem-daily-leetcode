class Solution {
    public String infixToPrefix(String s) {
        // code here
        String ans = "";
        Stack<Character> st = new Stack<>();
        int n = s.length();
        for(int i = n-1; i>=0; i--){
            char ch = s.charAt(i);
            if((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9')){
                ans+=ch;
            }
            else if(ch == ')'){
                st.push(ch);
            }
            else if(ch == '('){
                while(!st.isEmpty() && st.peek() != ')'){
                    ans+=st.pop();
                }
                if(!st.isEmpty()) st.pop(); 
            }
            else{
                while(!st.isEmpty() && priority(ch) <= priority(st.peek())){
                    ans+=st.pop();
                }
                st.push(ch);
            }
        }
        while (!st.isEmpty()) {
            ans += st.pop();
        }
        StringBuilder sb  = new StringBuilder(ans);
        sb.reverse();
        return sb.toString();
    }
    public static int priority(char ch){
        if(ch == '^'){
            return 3;
        }
        if(ch == '*' || ch == '/'){
            return 2;
        }
        if(ch == '+' || ch == '-'){
            return 1;
        }
        return 0;
    }
}
