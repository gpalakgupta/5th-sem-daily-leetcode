class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> lt = new ArrayList<>();
        part(s,ans,lt);
        return ans;
    }
    public boolean ispalindrome(String str){
        int i = 0;
        int j = str.length()-1;
        while(i<j){
            if(str.charAt(i) != str.charAt(j)){
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
    public void part(String s, List<List<String>> ans, List<String> lt){
        if(s.length() == 0){
            ans.add(new ArrayList<String>(lt));
            return;
        }
        for(int i = 1; i<=s.length(); i++){
            String ques = s.substring(0,i);
            if(ispalindrome(ques)){
                lt.add(ques);
                part(s.substring(i),ans,lt);
                lt.remove(lt.size()-1);
            }
        }
    }
}
