class Solution {
    public class Pair{
        String first;
        int second;
        public Pair(String first, int second){
            this.first = first;
            this.second = second;
        }
    }
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
         
        HashSet<String> st = new HashSet<>();
        for(String el : wordList){
            st.add(el);
        }
        Queue<Pair> q = new LinkedList<>();
        q.add(new Pair(beginWord,1));
        st.remove(beginWord);
        while(!q.isEmpty()){
            Pair rv = q.poll();
            String str = rv.first;
            int step = rv.second;
            if(str.equals(endWord)){
                return step;
            }
            for(int i = 0; i<str.length(); i++){
                for(char j = 'a' ; j<='z'; j++){
                    char[] ch = str.toCharArray();
                    ch[i] = j;
                    String sb = new String(ch);
                    if(st.contains(sb)){
                        q.add(new Pair(sb,step+1));
                        st.remove(sb);
                    }
                }
            }
        }
        return 0;
    }
}
